name: GitHub Classroom Workflow

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
  repository_dispatch:

permissions:
  checks: write
  actions: read
  contents: read

jobs:
  build:
    name: Autograding
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Create doctest runner script
        run: |
          cat > run_doctests.sh << 'EOF'
          #!/bin/bash

          cd exercises/

          overall_exit_code=0
          echo "Running doctests in $(pwd)"
          files=$(find . -maxdepth 1 -name "ex*.py" | sort -V)
          if [ -z "$files" ]; then
            echo "WARNING: No Python files found matching ex*.py"
            exit 1
          fi
          
          # Arrays to track results
          declare -a failed_files
          declare -a passed_files
          
          # Process each file
          for file in $files; do
            echo "Running doctest on $file"
            if python3 -m doctest $file; then
              passed_files+=("$file")
              echo "✅ PASS: $file"
            else
              failed_files+=("$file")
              overall_exit_code=1
              echo "❌ FAIL: $file"
            fi
          done
          
          # Summary report
          total_files=${#passed_files[@]}+${#failed_files[@]}
          echo "=================================================="
          echo "🧪 DOCTEST SUMMARY"
          echo "=================================================="
          echo "Total files tested: $total_files"
          echo "Passed: ${#passed_files[@]}"
          echo "Failed: ${#failed_files[@]}"
          
          
          # List all passed files if any
          if [ ${#passed_files[@]} -gt 0 ]; then
            echo ""
            echo "✅ PASSED FILES"
            echo "------------------------------------------------"
            for f in "${passed_files[@]}"; do
              echo "- $f"
            done
          fi

          # List all failed files if any
          if [ ${#failed_files[@]} -gt 0 ]; then
            echo ""
            echo "❌ FAILED FILES"
            echo "------------------------------------------------"
            for f in "${failed_files[@]}"; do
              echo "- $f"
            done
          fi
          
          echo ""
          if [ $overall_exit_code -eq 0 ]; then
            echo "🎉 All tests passed!"
          else
            echo "⚠️ Some tests failed. See details above."
          fi
          
          exit $overall_exit_code
          EOF
          
          chmod +x run_doctests.sh

      - name: Python Doctests
        id: doctest
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Python Doctests
          setup-command: ""
          command: ./run_doctests.sh
          timeout: 10
          max-score: 1

      - name: Report Grading Results
        uses: classroom-resources/autograding-grading-reporter@v1
        env:
          DOCTEST_RESULTS: ${{ steps.doctest.outputs.result }}
        with:
          runners: doctest
